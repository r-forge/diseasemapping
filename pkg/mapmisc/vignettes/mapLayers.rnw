\documentclass[12pt]{article}

%\VignetteEngine{knitr::knitr}
%\VignetteIndexEntry{Examples of map layers}


\usepackage[right=1in,left=1in,top=0.5in,bottom=0.1in]{geometry}
\usepackage{graphicx,hyperref}
\DeclareGraphicsExtensions{.png}

\renewcommand{\contentsname}{}

\newcommand{\comment}[1]{}
\title{Map tiles}
\author{Patrick Brown}



\begin{document}
\ifdefined\HCode
\Css{body{background-color:lightyellow;}}
\Css{h3{text-align:center;font-size:200\%;}}
\Css{div.tableofcontents{float:right;}}
\else
\comment{nothing to do here}
\fi
\maketitle


\tableofcontents



<<setup,include=FALSE>>=

library('knitr')
library('mapmisc')
library('raster')

reRun=("reRun" %in% commandArgs(trailingOnly = TRUE))


if( Sys.info()['user'] =='patrick') {
	opts_chunk$set(dpi=72,dev.args=list(bg='white'))	
}else{	
	opts_chunk$set(dpi=36,dev.args=list(bg='white'))	
}

theNames = names(osmTiles())
africaExtent = c(25, 25)
trafalgarSquare=c(-0.128056,51.508056)
@


<<downloadTiles,include=FALSE>>=
if(reRun) {
africaTiles = openmap(africaExtent, path=theNames,zoom=2,
    verbose=TRUE, 
    buffer=c(1,1))

londonTiles = openmap(trafalgarSquare,zoom=12,path=theNames,verbose=TRUE)


# make sure all data is stored in memory not on disk
# so that caching will work
for(D in names(africaTiles))
	values(africaTiles[[D]]) = 	values(africaTiles[[D]])
for(D in names(londonTiles))
	values(londonTiles[[D]]) = 	values(londonTiles[[D]])

if(file.exists("../inst/extdata"))
	save(africaTiles, londonTiles,
			file="../inst/extdata/tiles.RData",
			compress="xz")
} else { # don't rerun
	load(system.file("extdata", "tiles.RData", package = "mapmisc"))
}
@

\newpage 

The following are some examples of maps produced with

{\tt mymap=openmap(x, path="something")}



%<<someTiles,fig.cap="Various Tiles", fig.subcap=thesubcap, dev='png',
% out.width="0.22\\textwidth",echo=FALSE>>= 
<<someTiles,dev='png', out.width="\\textwidth",echo=FALSE,results='asis',fig.height=5,fig.width=5>>=


mytiles = list(africaTiles, londonTiles)

for(D in theNames){
	Dsub = gsub("-",".", D)

	threeTiles = length(
			grep(paste("^", Dsub, 
							"([rR]ed|[gG]reen|[bB]lue)$", 
							sep=""), 
			names(mytiles[[1]]))
		)>0 | 	length(
				grep(paste("^", Dsub, 
								"([rR]ed|[gG]reen|[bB]lue)$", 
								sep=""), 
						names(mytiles[[2]]))
		)>0

	
	cat("\\section[",D,"]{{\\tt plot","RGB"[threeTiles], 
			"(openmap(x,path=\"", D, "\"))}}", sep='')
	cat("\\label{", D, "}\n",sep="")
  cat(openmapAttribution(D, 'latex'))
	cat("\n\n\\nopagebreak[4]\\begin{tabular}{ccc}\n")
	
	
	for(Dplot in 1:length(mytiles)) {
		cat("\n\\begin{minipage}{0.4\\textwidth}\n")
		cat("%", Dplot, "\n")
		oneTile = grep(paste("^", Dsub, "$", sep=""), 
				names(mytiles[[Dplot]]), value=TRUE)
		threeTiles = grep(paste("^", Dsub, 
						"([rR]ed|[gG]reen|[bB]lue)$", sep=""), 
				names(mytiles[[Dplot]]),value=TRUE)
		if(length(threeTiles)==3) {
		map.new(mytiles[[Dplot]])
			
		thetry = try(plotRGB(mytiles[[Dplot]][[
								paste(Dsub, c("Red","Green","Blue"),sep="")
								]],add=TRUE))
		if(class(thetry)=="try-error"){
			print(paste(Dsub, c("Red","Green","Blue"),sep=""))
			print(mytiles[[Dplot]][[paste(Dsub, c("Red","Green","Blue"),sep="")]])
		}
	
	
	} else if (length(oneTile)==1){
		map.new(mytiles[[Dplot]])
		try(plot(mytiles[[Dplot]][[oneTile]],add=TRUE))

	} else {

		plot.new()
		text(0.5, 0.8, paste(D, "is\n not currently\navailable"))

		
	}
	cat("\n\\end{minipage}&", #"\\begin{minipage}{0.3\\textwidth}",
			"\n")	
	}
#	cat("\n\\end{minipage}\n")
	cat("\n\\end{tabular}\n")
	
	
}

@

\end{document}
