\documentclass[12pt]{article}
\usepackage[margin=1in]{geometry}
\usepackage{caption,subcaption,float,amsmath,filecontents}
\newcommand{\subfloat}[2][need a sub-caption]{\subcaptionbox{#1}{#2}}

<<setup,include=FALSE>>=
library('knitr')

chapter=''
opts_chunk$set(echo=TRUE, 
		dev='pdf', marginsp=1,  
		fig.align='',fig.pos='H',
		fig.width=4,fig.height=3,out.width='\\textwidth',
		fig.path=file.path('Figures', chapter, ""),
		cache.path=file.path('cache', chapter, ""),
		tidy=TRUE,tidy.opts=list(reindent.spaces=2,
				code.width=45)
)

heavyCacheDate=NULL
lightCacheDate=NULL

knit_hooks$set(
		marginsp = function(before, options, envir){	
			if(!before) return()
# use small margins				
			par(mar=c(1.5+0.9*options$marginsp,
							1.5+0.9*options$marginsp,0.2,0.2), 
					mgp=c(1.45, 0.45, 0),cex=1.25)
		}		
)


library('RandomFields')
library('raster')
library('rgdal')
library('geostatsp')
library('mapmisc')
library('Hmisc')

options(width=67)

dataDir='/store/patrick/spatialData'

@



\title{SO2 Analysis}
\author{Patrick Brown}
\begin{document}
\maketitle

<<>>=
source("../R/loglikGmrf.R")
source("../R/loglikGmrfNugget.R")
@



<<world,cache=TRUE,echo=FALSE,cache.extra=1>>=
worldShapeFile =  system(paste("find ", dataDir, 
				" -name *countries*.shp", sep=""),TRUE)
worldShapeFile = gsub("\\.shp$","",worldShapeFile)
world = readOGR(dataDir,gsub("[[:print::]+/","",worldShapeFile),
		stringsAsFactors=FALSE,verbose=FALSE)
@

\section{SO2}
<<>>=
load("chinaSo2.RData")
@
<<>>=
china2
@

<<so2Plot,fig.cap='so2 data',out.width='0.5\\textwidth',fig.subcap=c('so2','population'),fig.height=4,fig.width=5,echo=FALSE,dev='png',cache=TRUE>>=
library(mapmisc)
map.new(china2)
plot(china2[['SO2.median']],add=TRUE)
plot(world,add=TRUE)
map.new(china2)
plot(china2[['pop']],add=TRUE)
plot(world,add=TRUE)

@

\subsection{Simplest model}

\begin{align*}
Y_i  =  & X_i\beta + U_i  \\
[U_1 \ldots U_N] \sim &\text{GMRF}
\end{align*}

<<chinaForGmrf,cache=TRUE,cache.extra=1>>=
chinaForGmrf = 
		list(Xmat = 
			model.matrix(
  ~ popLow + popHigh + popVeryHigh + latLow,
			chinaDF),
			Yvec=chinaDF$SO2.median,
				maternShape=2
		)
	chinaForGmrf$NN = 
				NNmat(china2,
						nearest=chinaForGmrf$maternShape+1)
		
@


<<so2OneL,echo=TRUE>>=
so2oneres = logLikGmrf(ar=0.8, Yvec=chinaForGmrf$Yvec, 
		Xmat=chinaForGmrf$Xmat, 
		NN=chinaForGmrf$NN, 
		maternShape=chinaForGmrf$maternShape)
as.vector(so2oneres)
@


<<so2CarbonFitGmrf,cache=TRUE,dependson='chinaForGmrf'>>=
arseq = seq(0.5,1,len=200)
arseq = arseq[-length(arseq)]
library(parallel)
so2Res = mcmapply(logLikGmrf, arseq,
		MoreArgs=chinaForGmrf,
		mc.cores=4,SIMPLIFY=TRUE)
@
		

<<>>=
so2summary = summaryGmrfFit(so2Res,chinaForGmrf) 
so2summary$summary
@

<<so2profLplot,fig.width=6,fig.height=4,out.width='0.6\\textwidth',fig.cap='SO2 profile l',echo=FALSE>>=
plot(so2summary$profL[,'rangeInCells'], 
		so2summary$profL[,'logL'], type='l',
		xlab='range (in cells)',ylab='log L')
abline(v=so2summary$summary['rangeInCells',
				c('mle','q0.025','q0.975')])

@


\subsection{Model with nugget effect}
\begin{align*}
Y_i|U_i  \sim  & \text{N}(\mu_i, \tau^2)\\
\mu_i = & X_i\beta + U_i  \\
[U_1 \ldots U_N] \sim &\text{GMRF}
\end{align*}




<<so2OneLnugget,echo=TRUE,cache=TRUE>>=
so2oneNugget = logLikGmrfNugget(ar=0.95,
		propNugget = seq(0, len=5,by=0.001),
		Yvec=chinaForGmrf$Yvec, 
		Xmat=chinaForGmrf$Xmat, 
		NN=chinaForGmrf$NN, 
		maternShape=chinaForGmrf$maternShape)
@

<<>>=
so2oneNugget[c('logL','propNugget','sigmasq','tausq'),]
@

<<so2NuggetFit,cache=TRUE >>=
arseqN = seq(0.92,1,len=41)
arseqN=arseqN[arseqN < 1]
chinaForGmrf$propNugget = seq(0,0.004,len=21)
library(parallel)
so2ResN = mcmapply(logLikGmrfNugget, 
		ar=arseqN,
		MoreArgs=chinaForGmrf,
		mc.cores=4,SIMPLIFY='array')
@


<<so2NuggetProf,out.width='0.5\\textwidth',fig.cap='SO2 Prof L',fig.height=5,fig.width=7,fig.subcap=c('gmrf params','matern params')>>=
Sprob = sort(unique(c(0, 0.5, 0.8,  0.95, 1-10^(-c(3,4,7,10)),1)))
Schisq = qchisq(Sprob,df=2)
Schisq[Schisq==Inf] = min(so2ResN['logL',,])-1


image(
		so2ResN['propNugget',,1],
		so2ResN['ar',1,],
		so2ResN['logL',,],
		breaks = max(so2ResN['logL',,]) - Schisq,
		col=heat.colors(length(Sprob)-1)
)

image(
		so2ResN['propNugget',,1],
		so2ResN['rangeInCells',1,],
		so2ResN['logL',,],
		breaks = max(so2ResN['logL',,]) - Schisq,
		col=heat.colors(length(Sprob)-1),
		log='y',ylim=c(7,25)
)
@


<<>>=
summarySo2N = summaryGmrfFitNugget(so2ResN,chinaForGmrf)
@

<<so2NuggetProfUniv,out.width='0.3\\textwidth',fig.cap='univariate prof l', fig.subcap=names(summarySo2N$profL),fig.width=4,fig.height=5,echo=FALSE>>=
for(D in names(summarySo2N$profL)) {
	
	plot(summarySo2N$profL[[D]],xlab=D,ylab='log L')
	abline(v=summarySo2N$summary[D,c('mle','q0.025','q0.975')])
	
}

@

\section{Black carbon}
<<>>=
load("blackCarbon.RData")
@

<< blackCarbonLm,cache=TRUE>>=
		bcLm = lm(y ~ popHigh + popLow + nightLow + nightHigh,
				data=bcAsiaDF)
@

<< bcLmSummary>>=
		summary(bcLm)$coef
@

<< bcForGmrf,cache=TRUE>>=
		bcForGmrf = list(Xmat = model.matrix(bcLm),
				Yvec=bcLm$model$y,
				maternShape=2
		)
		bcForGmrf$NN = 
				NNmat(bcAsiaBrick,
						nearest=bcForGmrf$maternShape+1)
		
@

<<bcOneL>>=
logLikGmrf(ar=0.8, Yvec=bcForGmrf$Yvec, Xmat=bcForGmrf$Xmat, 
		NN=bcForGmrf$NN, maternShape=bcForGmrf$maternShape)
@


<< blackCarbonFitGmrf,cache=TRUE>>=
arseq = seq(0.9,1,len=100)
library(parallel)
bcRes = mcmapply(logLikGmrf, arseq,
		MoreArgs=bcForGmrf,
		mc.cores=4,SIMPLIFY=TRUE)
@
		
	
<<>>=
bcSummary = summaryGmrfFit(bcRes,bcForGmrf) 
bcSummary$summary
@



\end{document}